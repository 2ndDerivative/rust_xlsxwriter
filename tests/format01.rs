// Test case that compares a file generated by rust_xlsxwriter with a file
// created by Excel.
//
// SPDX-License-Identifier: MIT OR Apache-2.0 Copyright 2022, John McNamara,
// jmcnamara@cpan.org

use rust_xlsxwriter::{Format, Workbook, XlsxError};

mod common;

// Test case to test simple formatting.
//
fn create_new_xlsx_file(filename: &str) -> Result<(), XlsxError> {
    let mut workbook = Workbook::new(filename);

    let worksheet1 = workbook.add_worksheet();

    worksheet1.write_string_only(0, 0, "Foo")?;
    worksheet1.write_number_only(1, 0, 123)?;

    let _ = workbook.add_worksheet().set_name("Data Sheet");
    let worksheet3 = workbook.add_worksheet();

    let bold = Format::new().set_bold();

    worksheet3.write_string_only(1, 1, "Foo")?;
    worksheet3.write_string(2, 1, "Bar", &bold)?;
    worksheet3.write_number_only(3, 2, 234)?;

    workbook.close()?;

    Ok(())
}

#[test]
fn test_format01() {
    let testcase = "format01";

    let (excel_file, xlsxwriter_file) = common::get_xlsx_filenames(testcase);
    _ = create_new_xlsx_file(&xlsxwriter_file);
    common::assert_eq(&excel_file, &xlsxwriter_file);
    common::remove_test_xlsx_file(&xlsxwriter_file);
}
