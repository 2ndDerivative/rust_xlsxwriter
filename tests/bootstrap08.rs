// Test case that compares a file generated by rust_xlsxwriter with a file
// created by Excel.
//
// SPDX-License-Identifier: MIT OR Apache-2.0 Copyright 2022, John McNamara,
// jmcnamara@cpan.org

use rust_xlsxwriter::{Workbook, XlsxError};

mod common;

// Test case to demonstrate creating a basic file with some string cell data.
fn create_new_xlsx_file(filename: &str) -> Result<(), XlsxError> {
    let mut workbook = Workbook::new();

    let worksheet1 = workbook.add_worksheet();

    worksheet1.write_string_only(0, 0, "Hello")?;
    worksheet1.write_string_only(1, 0, "World")?;
    worksheet1.write_string_only(2, 0, "Hello")?;
    worksheet1.write_string_only(3, 0, "World")?;

    let worksheet2 = workbook.add_worksheet();

    worksheet2.write_string_only(0, 0, "World")?;
    worksheet2.write_string_only(1, 0, "Hello")?;
    worksheet2.write_string_only(2, 0, "World")?;
    worksheet2.write_string_only(3, 0, "Hello")?;

    workbook.save(filename)?;

    Ok(())
}

#[test]
fn bootstrap08_write_repeated_strings_on_different_worksheets() {
    let test_runner = common::TestRunner::new("bootstrap08").initialize();

    _ = create_new_xlsx_file(test_runner.output_file());

    test_runner.assert_eq();
    test_runner.cleanup();
}
